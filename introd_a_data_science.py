# -*- coding: utf-8 -*-
"""introd a Data Science.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1V4YDDFdHP5fdKiK182sceLDb2c0D9dZB
"""

import pandas as pd

notas = pd.read_csv("ratings.csv")
notas.head()

notas.shape

notas.columns = ["usuarioID", "filmeID", "nota", "momento"]
notas.head()

notas['nota'].unique()

notas['nota'].value_counts()

notas['nota'].mean()

notas.nota

notas.nota.plot()

notas.nota.plot(kind = 'hist')

print("Média",notas['nota'].mean())
print("Mediana",notas['nota'].median())

notas.nota.describe()

import seaborn as sns

sns.boxplot(notas.nota)

filmes = pd.read_csv("movies.csv")
filmes.columns = ['filmesID', 'titulo', 'generos']
filmes.head()

notas.head()

notas.query("filmeID==1").nota.mean()

medias_por_filme = notas.groupby("filmeID").mean()["nota"]
medias_por_filme.head()

medias_por_filme.plot(kind='hist')

import seaborn as sns

sns.boxplot(medias_por_filme)

medias_por_filme.describe()

sns.distplot(medias_por_filme, bins=10)

import matplotlib.pyplot as plt

plt.hist(medias_por_filme)
plt.title("Histograma das médias dos filmes")

sns.boxplot(y=medias_por_filme)

tmdb = pd.read_csv("tmdb_5000_movies.csv")
tmdb.head()

tmdb.original_language.unique() # categorica nominal

contagem_de_lingua = tmdb["original_language"].value_counts().to_frame().reset_index()
contagem_de_lingua.columns = ["original_language", "total"]
contagem_de_lingua.head()

sns.barplot(x="original_language", y="total", data = contagem_de_lingua)

sns.catplot(x = "original_language", kind = "count", data = tmdb)

plt.pie(contagem_de_lingua["total"], labels = contagem_de_lingua["original_language"])

total_por_lingua = tmdb["original_language"].value_counts()
total_geral = total_por_lingua.sum()
total_de_ingles = total_por_lingua.loc["en"]
total_do_resto = total_geral - total_de_ingles
print(total_de_ingles, total_do_resto)

dados = {
    'lingua' : ['ingles', 'outros'],
    'total' : [total_de_ingles, total_do_resto]
}
dados = pd.DataFrame(dados)
dados
sns.barplot(x="lingua", y="total", data = dados)

plt.pie(dados['total'], labels = dados['lingua'])

total_por_lingua_de_outros_filmes = tmdb.query("original_language != 'en' " ).original_language.value_counts()
total_por_lingua_de_outros_filmes

filmes_sem_lingua_original_em_ingles = tmdb.query("original_language != 'en' " )
sns.catplot(x = "original_language", kind = "count", data = filmes_sem_lingua_original_em_ingles,
            aspect = 2,
            palette = "GnBu_d",
            order = total_por_lingua_de_outros_filmes.index )

filmes.head()

filmes.head(2)

notas_toy_story = notas.query("filmeID==1")
notas_do_jumanji = notas.query("filmeID==2")
print(len(notas_toy_story), len(notas_do_jumanji))

print("Nota média do Toy Story %.2f" % notas_toy_story.nota.mean())
print("Nota média do Jumanji %.2f" % notas_do_jumanji.nota.mean())

print(notas_toy_story.nota.std(), notas_do_jumanji.nota.std())

print("Nota mediana do Toy Story %.2f" % notas_toy_story.nota.median())
print("Nota mediana do Jumanji %.2f" % notas_do_jumanji.nota.median())

import matplotlib.pyplot as plt
import numpy as np

filme1 = np.append(np.array([2.5] * 10), np.array([3.5] * 10))
filme2 = np.append(np.array([5] * 10), np.array([1] * 10))
print(filme1.mean(), filme2.mean())
print(np.std(filme1), np.std(filme2))
print(np.median(filme1), np.median(filme2))
plt.hist(filme1)
plt.hist(filme2)

plt.boxplot([filme1, filme2])

